---
import { marked } from "marked";
import { getHighlighter } from "shiki";

interface Props {
  markdown: string;
}

const removeRepeatPreCode = (md: string) => {
  return md
    .replace(/<pre><code class="language-.+?">/g, "")
    .replace(/<\/code><\/pre>\n<\/code><\/pre>/g, "</code></pre>")
    .replace(
      /(<pre class="shiki.+?>)/g,
      '$1<button type="button" onclick="copy(this)" aria-label="คัดลอกโค้ด" class="copy-btn"><svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" d="M8.25 7.5V6.108c0-1.135.845-2.098 1.976-2.192.373-.03.748-.057 1.123-.08M15.75 18H18a2.25 2.25 0 002.25-2.25V6.108c0-1.135-.845-2.098-1.976-2.192a48.424 48.424 0 00-1.123-.08M15.75 18.75v-1.875a3.375 3.375 0 00-3.375-3.375h-1.5a1.125 1.125 0 01-1.125-1.125v-1.5A3.375 3.375 0 006.375 7.5H5.25m11.9-3.664A2.251 2.251 0 0015 2.25h-1.5a2.251 2.251 0 00-2.15 1.586m5.8 0c.065.21.1.433.1.664v.75h-6V4.5c0-.231.035-.454.1-.664M6.75 7.5H4.875c-.621 0-1.125.504-1.125 1.125v12c0 .621.504 1.125 1.125 1.125h9.75c.621 0 1.125-.504 1.125-1.125V16.5a9 9 0 00-9-9z" /></svg></button>'
    );
};

const makeLinkExternal = (md: string) => {
  return md.replace(
    /<a href="(.+?)"/g,
    '<a href="$1" target="_blank" rel="nofollow noopener noreferrer" title="$1"'
  );
};

const formatMd = (md: string) => {
  return makeLinkExternal(removeRepeatPreCode(md));
};

const { markdown } = Astro.props;

const highlighter = await getHighlighter({
  theme: "github-dark-dimmed",
});

marked.setOptions({
  highlight: (code, lang) => highlighter.codeToHtml(code, { lang }),
});

const html = formatMd(marked.parse(markdown));
---

<div class="content">
  <Fragment set:html={html} />
</div>

<style lang="scss" is:global>
  .content {
    hr {
      border: none;
    }

    :is(h1, h2, h3, hr) {
      margin: 16px 0;
      border-bottom: 2px solid;
    }

    :is(p, blockquote, pre, ol, ul, table, img) {
      margin: 8px 0;
    }

    blockquote {
      border-left: 2px solid;
      padding-left: 8px;
      border-radius: 2px;
    }

    pre {
      border-radius: 4px;
    }

    pre > code {
      display: block;

      padding: 8px;
      border-radius: 4px;

      counter-reset: code-line;
      counter-increment: code-line 0;

      overflow-x: auto;
    }

    code .line::before {
      content: counter(code-line);
      counter-increment: code-line;
      width: 1.5rem;
      margin-right: 1rem;
      display: inline-block;
      text-align: right;
      color: #636e7b;
    }

    :is(ul, ol) {
      margin-left: 2ch;
    }

    li > :is(ul, ol) {
      margin: 0 0 0 2ch;
    }

    table {
      border-collapse: collapse;

      td,
      th {
        padding: 8px;
        border: 1px solid;
      }
    }

    img {
      max-width: 100%;
      display: block;
    }

    del {
      opacity: 0.5;
      text-decoration: line-through #ff4136 double;
    }

    a {
      overflow-wrap: break-word;
      word-wrap: break-word;
      word-break: break-word;
      hyphens: none;
    }

    .shiki {
      position: relative;

      > .copy-btn {
        position: absolute;
        top: 4px;
        right: 4px;

        opacity: 0.2;
        transition: opacity 0.1s;

        width: 27px;
        height: 27px;

        display: flex;
        align-items: center;
        justify-content: center;

        cursor: pointer;

        &:hover {
          opacity: 1;
        }
      }
    }
  }
</style>
